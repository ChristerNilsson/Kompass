// Generated by CoffeeScript 2.7.0
// Målkoordinater (t.ex. Stockholm)
var calculateBearing, f, previousPosition, targetLat, targetLon, toDegrees, toRadians, updateArrow, watchError;

targetLat = 59.3293;

targetLon = 18.0686;

previousPosition = null;

toRadians = function(deg) {
  return deg * Math.PI / 180;
};

toDegrees = function(rad) {
  return rad * 180 / Math.PI;
};

calculateBearing = function(lat1, lon1, lat2, lon2) {
  var x, y, Δλ, φ1, φ2;
  φ1 = toRadians(lat1);
  φ2 = toRadians(lat2);
  Δλ = toRadians(lon2 - lon1);
  y = Math.sin(Δλ) * Math.cos(φ2);
  x = Math.cos(φ1) * Math.sin(φ2) - Math.sin(φ1) * Math.cos(φ2) * Math.cos(Δλ);
  return (toDegrees(Math.atan2(y, x)) + 360) % 360;
};

updateArrow = function(bearingToTarget) {
  var arrow;
  arrow = document.getElementById('arrow');
  return arrow.style.transform = `rotate(${bearingToTarget}deg)`;
};

f = function(position) {
  var latitude, longitude, movementBearing, relativeBearing, targetBearing;
  ({latitude, longitude} = position.coords);
  if (previousPosition != null) {
    movementBearing = calculateBearing(previousPosition.latitude, previousPosition.longitude, latitude, longitude);
    targetBearing = calculateBearing(latitude, longitude, targetLat, targetLon);
    relativeBearing = (targetBearing - movementBearing + 360) % 360;
    updateArrow(relativeBearing);
    document.getElementById('debug').innerText = `Din riktning: ${Math.round(movementBearing)}°, Mål: ${Math.round(targetBearing)}°, Relativt: ${Math.round(relativeBearing)}°`;
  }
  return previousPosition = {
    latitude: latitude,
    longitude: longitude
  };
};

watchError = function(error) {
  alert("Kunde inte hämta GPS-position");
  return console.error(error);
};

navigator.geolocation.watchPosition(f, watchError, {
  enableHighAccuracy: true,
  maximumAge: 1000,
  timeout: 5000
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6IlxcIiwic291cmNlcyI6WyJza2V0Y2guY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDa0M7QUFBQSxJQUFBLGdCQUFBLEVBQUEsQ0FBQSxFQUFBLGdCQUFBLEVBQUEsU0FBQSxFQUFBLFNBQUEsRUFBQSxTQUFBLEVBQUEsU0FBQSxFQUFBLFdBQUEsRUFBQTs7QUFDaEMsU0FBQSxHQUFZOztBQUNaLFNBQUEsR0FBWTs7QUFDWixnQkFBQSxHQUFtQjs7QUFFbkIsU0FBQSxHQUFZLFFBQUEsQ0FBQyxHQUFELENBQUE7U0FBUyxHQUFBLEdBQU0sSUFBSSxDQUFDLEVBQVgsR0FBZ0I7QUFBekI7O0FBQ1osU0FBQSxHQUFZLFFBQUEsQ0FBQyxHQUFELENBQUE7U0FBUyxHQUFBLEdBQU0sR0FBTixHQUFZLElBQUksQ0FBQztBQUExQjs7QUFFWixnQkFBQSxHQUFtQixRQUFBLENBQUMsSUFBRCxFQUFPLElBQVAsRUFBYSxJQUFiLEVBQW1CLElBQW5CLENBQUE7QUFDcEIsTUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUE7RUFBQyxFQUFBLEdBQUssU0FBQSxDQUFVLElBQVY7RUFDTCxFQUFBLEdBQUssU0FBQSxDQUFVLElBQVY7RUFDTCxFQUFBLEdBQUssU0FBQSxDQUFVLElBQUEsR0FBTyxJQUFqQjtFQUNMLENBQUEsR0FBSSxJQUFJLENBQUMsR0FBTCxDQUFTLEVBQVQsQ0FBQSxHQUFlLElBQUksQ0FBQyxHQUFMLENBQVMsRUFBVDtFQUNuQixDQUFBLEdBQUksSUFBSSxDQUFDLEdBQUwsQ0FBUyxFQUFULENBQUEsR0FBZSxJQUFJLENBQUMsR0FBTCxDQUFTLEVBQVQsQ0FBZixHQUE4QixJQUFJLENBQUMsR0FBTCxDQUFTLEVBQVQsQ0FBQSxHQUFlLElBQUksQ0FBQyxHQUFMLENBQVMsRUFBVCxDQUFmLEdBQThCLElBQUksQ0FBQyxHQUFMLENBQVMsRUFBVDtTQUNoRSxDQUFDLFNBQUEsQ0FBVSxJQUFJLENBQUMsS0FBTCxDQUFXLENBQVgsRUFBYyxDQUFkLENBQVYsQ0FBQSxHQUE4QixHQUEvQixDQUFBLEdBQXNDO0FBTm5COztBQVFuQixXQUFBLEdBQWMsUUFBQSxDQUFDLGVBQUQsQ0FBQTtBQUNmLE1BQUE7RUFBQyxLQUFBLEdBQVEsUUFBUSxDQUFDLGNBQVQsQ0FBd0IsT0FBeEI7U0FDUixLQUFLLENBQUMsS0FBSyxDQUFDLFNBQVosR0FBd0IsQ0FBQSxPQUFBLENBQUEsQ0FBVSxlQUFWLENBQUEsSUFBQTtBQUZWOztBQUlkLENBQUEsR0FBSSxRQUFBLENBQUMsUUFBRCxDQUFBO0FBQ0wsTUFBQSxRQUFBLEVBQUEsU0FBQSxFQUFBLGVBQUEsRUFBQSxlQUFBLEVBQUE7RUFBQyxDQUFBLENBQUMsUUFBRCxFQUFXLFNBQVgsQ0FBQSxHQUF3QixRQUFRLENBQUMsTUFBakM7RUFFQSxJQUFHLHdCQUFIO0lBQ0MsZUFBQSxHQUFrQixnQkFBQSxDQUFpQixnQkFBZ0IsQ0FBQyxRQUFsQyxFQUE0QyxnQkFBZ0IsQ0FBQyxTQUE3RCxFQUF1RSxRQUF2RSxFQUFpRixTQUFqRjtJQUNsQixhQUFBLEdBQWdCLGdCQUFBLENBQWlCLFFBQWpCLEVBQTJCLFNBQTNCLEVBQXNDLFNBQXRDLEVBQWlELFNBQWpEO0lBQ2hCLGVBQUEsR0FBa0IsQ0FBQyxhQUFBLEdBQWdCLGVBQWhCLEdBQWtDLEdBQW5DLENBQUEsR0FBMEM7SUFDNUQsV0FBQSxDQUFZLGVBQVo7SUFDQSxRQUFRLENBQUMsY0FBVCxDQUF3QixPQUF4QixDQUFnQyxDQUFDLFNBQWpDLEdBQTZDLENBQUEsY0FBQSxDQUFBLENBQWlCLElBQUksQ0FBQyxLQUFMLENBQVcsZUFBWCxDQUFqQixDQUFBLFFBQUEsQ0FBQSxDQUF1RCxJQUFJLENBQUMsS0FBTCxDQUFXLGFBQVgsQ0FBdkQsQ0FBQSxhQUFBLENBQUEsQ0FBZ0csSUFBSSxDQUFDLEtBQUwsQ0FBVyxlQUFYLENBQWhHLENBQUEsQ0FBQSxFQUw5Qzs7U0FPQSxnQkFBQSxHQUNDO0lBQUEsUUFBQSxFQUFVLFFBQVY7SUFDQSxTQUFBLEVBQVc7RUFEWDtBQVhHOztBQWNKLFVBQUEsR0FBYSxRQUFBLENBQUMsS0FBRCxDQUFBO0VBQ2IsS0FBQSxDQUFNLCtCQUFOO1NBQ0EsT0FBTyxDQUFDLEtBQVIsQ0FBYyxLQUFkO0FBRmE7O0FBSWIsU0FBUyxDQUFDLFdBQVcsQ0FBQyxhQUF0QixDQUFvQyxDQUFwQyxFQUF1QyxVQUF2QyxFQUFtRDtFQUFDLGtCQUFBLEVBQW9CLElBQXJCO0VBQTJCLFVBQUEsRUFBWSxJQUF2QztFQUE2QyxPQUFBLEVBQVM7QUFBdEQsQ0FBbkQiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuIyBNw6Vsa29vcmRpbmF0ZXIgKHQuZXguIFN0b2NraG9sbSlcclxudGFyZ2V0TGF0ID0gNTkuMzI5M1xyXG50YXJnZXRMb24gPSAxOC4wNjg2XHJcbnByZXZpb3VzUG9zaXRpb24gPSBudWxsXHJcblxyXG50b1JhZGlhbnMgPSAoZGVnKSAtPiBkZWcgKiBNYXRoLlBJIC8gMTgwXHJcbnRvRGVncmVlcyA9IChyYWQpIC0+IHJhZCAqIDE4MCAvIE1hdGguUElcclxuXHJcbmNhbGN1bGF0ZUJlYXJpbmcgPSAobGF0MSwgbG9uMSwgbGF0MiwgbG9uMikgLT5cclxuXHTPhjEgPSB0b1JhZGlhbnMgbGF0MVxyXG5cdM+GMiA9IHRvUmFkaWFucyBsYXQyXHJcblx0zpTOuyA9IHRvUmFkaWFucyBsb24yIC0gbG9uMVxyXG5cdHkgPSBNYXRoLnNpbijOlM67KSAqIE1hdGguY29zKM+GMilcclxuXHR4ID0gTWF0aC5jb3Moz4YxKSAqIE1hdGguc2luKM+GMikgLSBNYXRoLnNpbijPhjEpICogTWF0aC5jb3Moz4YyKSAqIE1hdGguY29zKM6UzrspXHJcblx0KHRvRGVncmVlcyhNYXRoLmF0YW4yKHksIHgpKSArIDM2MCkgJSAzNjBcclxuXHJcbnVwZGF0ZUFycm93ID0gKGJlYXJpbmdUb1RhcmdldCkgLT5cclxuXHRhcnJvdyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhcnJvdycpXHJcblx0YXJyb3cuc3R5bGUudHJhbnNmb3JtID0gXCJyb3RhdGUoI3tiZWFyaW5nVG9UYXJnZXR9ZGVnKVwiXHJcblxyXG5mID0gKHBvc2l0aW9uKSAtPlxyXG5cdHtsYXRpdHVkZSwgbG9uZ2l0dWRlfSA9IHBvc2l0aW9uLmNvb3Jkc1xyXG5cclxuXHRpZiBwcmV2aW91c1Bvc2l0aW9uP1xyXG5cdFx0bW92ZW1lbnRCZWFyaW5nID0gY2FsY3VsYXRlQmVhcmluZyBwcmV2aW91c1Bvc2l0aW9uLmxhdGl0dWRlLCBwcmV2aW91c1Bvc2l0aW9uLmxvbmdpdHVkZSxsYXRpdHVkZSwgbG9uZ2l0dWRlXHJcblx0XHR0YXJnZXRCZWFyaW5nID0gY2FsY3VsYXRlQmVhcmluZyBsYXRpdHVkZSwgbG9uZ2l0dWRlLCB0YXJnZXRMYXQsIHRhcmdldExvblxyXG5cdFx0cmVsYXRpdmVCZWFyaW5nID0gKHRhcmdldEJlYXJpbmcgLSBtb3ZlbWVudEJlYXJpbmcgKyAzNjApICUgMzYwXHJcblx0XHR1cGRhdGVBcnJvdyByZWxhdGl2ZUJlYXJpbmdcclxuXHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkZWJ1ZycpLmlubmVyVGV4dCA9IFwiRGluIHJpa3RuaW5nOiAje01hdGgucm91bmQobW92ZW1lbnRCZWFyaW5nKX3CsCwgTcOlbDogI3tNYXRoLnJvdW5kKHRhcmdldEJlYXJpbmcpfcKwLCBSZWxhdGl2dDogI3tNYXRoLnJvdW5kKHJlbGF0aXZlQmVhcmluZyl9wrBcIlxyXG5cclxuXHRwcmV2aW91c1Bvc2l0aW9uID1cclxuXHRcdGxhdGl0dWRlOiBsYXRpdHVkZVxyXG5cdFx0bG9uZ2l0dWRlOiBsb25naXR1ZGVcclxuXHJcbndhdGNoRXJyb3IgPSAoZXJyb3IpIC0+XHJcblx0YWxlcnQgXCJLdW5kZSBpbnRlIGjDpG10YSBHUFMtcG9zaXRpb25cIlxyXG5cdGNvbnNvbGUuZXJyb3IgZXJyb3JcclxuXHJcbm5hdmlnYXRvci5nZW9sb2NhdGlvbi53YXRjaFBvc2l0aW9uIGYsXHR3YXRjaEVycm9yLCB7ZW5hYmxlSGlnaEFjY3VyYWN5OiB0cnVlLCBtYXhpbXVtQWdlOiAxMDAwLCB0aW1lb3V0OiA1MDAwfVxyXG5cclxuIl19
//# sourceURL=c:\github\Kompass\sketch.coffee